<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- 引入数据库的配置文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
	
	<!-- MySQL数据源 -->
	<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${mysql.jdbcUrl}"></property>
		<property name="driverClass" value="${mysql.driverClass}"></property>
		<property name="user" value="${mysql.username}"></property>
		<property name="password" value="${mysql.password}"></property>
	</bean> -->
	
	<!-- Oracle数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${oracle.jdbcUrl}"></property>
		<property name="driverClass" value="${oracle.driverClass}"></property>
		<property name="user" value="${oracle.username}"></property>
		<property name="password" value="${oracle.password}"></property>
	</bean>
	
	<!-- Spring事物管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 开启基于注解的事物 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 
		整合Mybatis 
		目的：
			1、Spring管理所有组件，mapper的实现类
			2、Spring用来管理事物
	-->
	<!-- 创建出sqlSessionFactory对象 -->
	<!-- 
		MyBatis提供的：org.mybatis.spring.SqlSessionFactoryBean
		MP提供的：com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean
	 -->
	<bean id="sqlSessionFactoryBean" class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- configLocation指定全局配置文件的位置 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- 别名处理 -->
		<property name="typeAliasesPackage" value="com.stone.mp.beans"></property>
		<!-- 注入全局的MP策略配置 -->
		<property name="globalConfig" ref="globalConfiguration"></property>
		<!-- 插件注册 -->
		<property name="plugins">
			<list>
				<!-- 注入分页插件 -->
				<bean class="com.baomidou.mybatisplus.plugins.PaginationInterceptor"></bean>
				<!-- 注入执行分析插件 -->
				<!-- <bean class="com.baomidou.mybatisplus.plugins.SqlExplainInterceptor">
					<property name="stopProceed" value="true"></property>
				</bean> -->
				<!-- 注册性能分析插件 -->
				<bean class="com.baomidou.mybatisplus.plugins.PerformanceInterceptor">
					<property name="format" value="true"></property>
					<!-- <property name="maxTime" value="5"></property> -->
				</bean>
				<!-- 注册乐观锁插件 -->
				<bean class="com.baomidou.mybatisplus.plugins.OptimisticLockerInterceptor"></bean>
			</list>
		</property>
	</bean>
	
	<!-- 定义MyBatisPlus的全局策略配置 -->
	<bean id="globalConfiguration" class="com.baomidou.mybatisplus.entity.GlobalConfiguration">
		<!-- 在2.3版本以后，dbColumnUnderline默认值就是true -->
		<property name="dbColumnUnderline" value="true"></property>		
		<!-- MySQL全局的主键策略,0表示AUTO -->
		<!-- <property name="idType" value="0"></property> -->
		<!-- Oracle全局的主键策略 -->
		<property name="idType" value="1"></property>
		<!-- 全局表前缀策略配置 -->
		<property name="tablePrefix" value="tbl_"></property>
		<!-- 注入自定义全局操作 -->
		<!-- <property name="sqlInjector" ref="mySqlInjector"></property> -->
		<!-- 注入逻辑删除 -->
		<property name="sqlInjector" ref="logicSqlInjector"></property>
		<!-- 注入逻辑删除全局值 -->
		<property name="logicDeleteValue" value="-1"></property>
		<property name="logicNotDeleteValue" value="1"></property>
		<!-- 注入公共字段填充处理器 -->
		<property name="metaObjectHandler" ref="myMetaObjectHandler"></property>
		<!-- 注入Oracle主键Sequence -->
		<property name="keyGenerator" ref="oracleKeyGenerator"></property>
	</bean>
	
	<!-- 定义自定义注入器 -->
	<bean id="mySqlInjector" class="com.stone.mp.injector.MySqlInjector"></bean>
	<!-- 逻辑删除 -->
	<bean id="logicSqlInjector" class="com.baomidou.mybatisplus.mapper.LogicSqlInjector"></bean>
	<!-- 公共字段填充处理器 -->
	<bean id="myMetaObjectHandler" class="com.stone.mp.metaobjecthandler.MyMetaObjectHandler"></bean>
	<!-- 配置Oracle主键Sequence -->
	<bean id="oracleKeyGenerator" class="com.baomidou.mybatisplus.incrementer.OracleKeyGenerator"></bean>
	
	<!-- 配置MyBatis扫描mapper接口的路径 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.stone.mp.mapper"></property>
	</bean>

</beans>
